=============================
Test cases for 4-print_square
=============================

This module has only one function ``print_square(square)``.

Usage
=====
``print_square(...)`` prints a square with the character ``#``.


Importing function from the module:
    >>> print_square = __import__('4-print_square').print_square

Test with valid input, positive integer
    >>> print_square(4)
    ####
    ####
    ####
    ####

Test with a large integer
    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

Test with valid input ``0`` prints nothing
    >>> print_square(0)
    <BLANKLINE>

Test with invalid input, negative integer
    >>> print_square(-8)
    Traceback (most recent call last):
                   ...
    ValueError: size must be >= 0

Test with invalid input, float
    >>> print_square(3.0)
    Traceback (most recent call last):
                   ...
    TypeError: size must be an integer

Test with invalid input, negative integer
    >>> print_square(-2)
    Traceback (most recent call last):
                   ...
    ValueError: size must be >= 0

Test without passing any argument
    >>> print_square()
    Traceback (most recent call last):
                   ...
    TypeError: print_square() missing 1 required positional argument: 'size'
